import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class BankQueueSimulation {

    // Customer class with name and number
    static class Customer {
        String name;
        int number;

        public Customer(String name, int number) {
            this.name = name;
            this.number = number;
        }

        @Override
        public String toString() {
            return "Customer #" + number + " (" + name + ")";
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Queue<Customer> queue = new LinkedList<>();
        int customerNumber = 1;
        int choice;

        do {
            System.out.println("------ BANK QUEUE MENU ------");
            System.out.println("1. Add customer to queue");
            System.out.println("2. Serve next customer");
            System.out.println("3. View queue");
            System.out.println("4. Exit");
            System.out.print("Enter choice: ");

            while (!scanner.hasNextInt()) {
                System.out.print("Please enter a valid number (1-4): ");
                scanner.next();
            }
            choice = scanner.nextInt();
            scanner.nextLine(); // consume newline

            switch (choice) {
                case 1:
                    System.out.print("Enter customer name: ");
                    String name = scanner.nextLine();
                    Customer newCustomer = new Customer(name, customerNumber++);
                    queue.add(newCustomer);
                    System.out.println(newCustomer + " added to the queue.");
                    printQueue(queue);
                    break;

                case 2:
                    if (queue.isEmpty()) {
                        System.out.println("No customers in queue to serve.");
                    } else {
                        Customer served = queue.poll();
                        System.out.println("Serving " + served);
                    }
                    printQueue(queue);
                    break;

                case 3:
                    printQueue(queue);
                    break;

                case 4:
                    System.out.println("Exiting... Goodbye!");
                    break;

                default:
                    System.out.println("Invalid choice. Please select between 1-4.");
            }

            System.out.println();

        } while (choice != 4);

        scanner.close();
    }

    // Helper method to display queue status
    private static void printQueue(Queue<Customer> queue) {
        if (queue.isEmpty()) {
            System.out.println("The queue is currently empty.");
        } else {
            System.out.println("Current queue:");
            int pos = 1;
            for (Customer c : queue) {
                System.out.println(pos + ". " + c);
                pos++;
            }
        }
    }
}
